#set($mystring = "alfresco/module/")
#set( $symbol_dollar = '$' )
<?xml version="1.0" encoding="UTF-8"?>
	<!--
		Licensed to the Apache Software Foundation (ASF) under one or more
		contributor license agreements. See the NOTICE file distributed with
		this work for additional information regarding copyright ownership.
		The ASF licenses this file to You under the Apache License, Version
		2.0 (the "License"); you may not use this file except in compliance
		with the License. You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<packaging>amp</packaging>
	<name>${project-name}</name>
	<!--
		An Alfresco version number must be of the form 1.2.3.4. Using
		1.0-SNAPSHOT as the AMP version will create an exception. See
		http://wiki.alfresco.com/wiki/Developing_an_Alfresco_Module: "The
		version number must be made up of numeric values separated by dots.
		For example '2.1.56' is a valid version number, '2.3.4a' is not. " In
		order to be able to use Maven snapshots we cannot use the <version/>
		below as the AMP module version. Instead we use the
		buildnumber-maven-plugin. This requires a scm connection.
	-->
	<version>${version}</version>
	<description>${project-description}</description>
	<properties>
		<!--
			Default for which src/main/properties/<env>/application.properties is
			loaded. NB: used only for the 'test' profile (e.g. '-P test' on the
			mvn commandline) jetty run deployment, does not impact AMP behavior
			which is typically environment independent
		-->
		<env>local</env>
		<config.target.path>${mystring}SIDE_${artifactId}</config.target.path>
		<!-- Webapp used to test/develop locally the AMP -->
		<webapp.name>SIDE_${artifactId}-webapp</webapp.name>

		<alfresco.data.location>./alf_data_jetty</alfresco.data.location>
		<alfresco.db.name>alf_jetty</alfresco.db.name>
		<alfresco.db.username>alfresco</alfresco.db.username>
		<alfresco.db.password>alfresco</alfresco.db.password>
		<webapp.log.level>error</webapp.log.level>
		<!--  End of testing webapp specific properties -->
		<!--  Module specific build time properties -->
		<module.log.level>debug</module.log.level>
	</properties>
	<!--
		need to list these as a provided so that Maven doesn't download them
		and include them in the AMP, they are provided by Alfresco
	-->
	<dependencies>
		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-repository</artifactId>
			<version>3.2r2</version>
			<scope>provided</scope>
			<classifier>community</classifier>
		</dependency>
		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-webscript-framework</artifactId>
			<version>3.2r2</version>
			<classifier>community</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-core</artifactId>
			<version>3.2r2</version>
			<classifier>community</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-web-client</artifactId>
			<version>3.2r2</version>
			<classifier>community</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.1</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.1</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.1-beta-8</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.0.8</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.0.3</version>
		</dependency>
		<!-- Don't add here amp dependencies as it will break amp packaging -->
	</dependencies>
	<!--
		The scm is required for the buildnumber-maven-plugin which is required
		for AMP version numbering
	-->
	<scm>
		<connection>scm:svn:http://domain.com/svn/trunk/</connection>
		<developerConnection>scm:svn:https://${symbol_dollar}{maven.username}@domain.com/svn/trunk/</developerConnection>
		<url>http://domain.com/svn/trunk/</url>
	</scm>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<revisionOnScmFailure>${symbol_dollar}{project.version}</revisionOnScmFailure>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<debug>true</debug>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.bluexml.side.Integration.m2</groupId>
				<artifactId>ampMojo</artifactId>
				<version>1.0.15</version>
				<extensions>true</extensions>
				<configuration>
					<dependentAmpExcludes>**</dependentAmpExcludes>
					<dependentAmpIncludes></dependentAmpIncludes>
					<attachClasses>true</attachClasses>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
					<overlays></overlays>
				</configuration>
			</plugin>
		</plugins>
		<!--
			Copies and filters resources in build folder so maven-amp-plugin can
			pick them up
		-->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**README-*</exclude>
				</excludes>
			</resource>
			<!--
				Copies and filters AMP config in the proper package so to enforce
				full module naming single sourcing from POM properties
			-->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/config</directory>
				<targetPath>${symbol_dollar}{config.target.path}</targetPath>
				<excludes>
					<exclude>**README-*</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
</project>
