# Username and password for synchronisation database
# You should enable full right access for this user on the database
synchrodb.username=alfresco
synchrodb.password=alfresco

# This configuration holds for Mysql
synchrodb.driver=org.gjt.mm.mysql.Driver
synchrodb.url=jdbc:mysql://localhost/alf_synchro
#synchrodb.url=jdbc:postgresql://localhost:5432/alf_relational?useUnicode=yes&characterEncoding=UTF-8


# Synchronization dialect (default dialect is a generic dialect which should work with most of the DBS)
synchrodb.dialect=com.bluexml.side.Integration.alfresco.sql.synchronization.dialects.DefaultDialect
# if the dialect is case insensitive and store table name in a case like for postgresql all in lower case, set this value to 
# either 'lower' for case insensitive rdbms which store object name in lower case: the mapped values of the synchronization_database_mapping.properties will be transformed in lower case, 
# or 'upper' for case insensitive rdbms which store object name in lower case: the mapped values of the synchronization_database_mapping.properties will be transformed in upper case,
# or 'none' for case sensitive rdbms like MySQL: the mapped values of the synchronization_database_mapping.properties will be unchanged,
synchrodb.dialect.caseMode=none
#synchrodb.dialect.caseMode=upper
#synchrodb.dialect.caseMode=lower
# MySQL
#synchrodb.dialect=com.bluexml.side.Integration.alfresco.sql.synchronization.dialects.mysql.MysqlDialect
#synchrodb.dialect.caseMode=none
#
#Oracle
#synchrodb.dialect=com.bluexml.side.Integration.alfresco.sql.synchronization.dialects.oracle.OracleDialect
#synchrodb.dialect.caseMode=none
#
#PostgreSQL
#synchrodb.dialect=com.bluexml.side.Integration.alfresco.sql.synchronization.dialects.DefaultDialect
#synchrodb.dialect.caseMode=lower
#

# to limit the scope of the models to load: all the models under the namespacePrefix will be loaded by the SQL synchronization model
# by default, all the models created under SIDE
# Ex: synchrodb.namespacePrefix=http://www.bluexml.com/model/content/britair
synchrodb.namespacePrefix=http://www.bluexml.com/model/content/

# in order to avoid to synchronize non useful type of the namespace, the following list allows to give the types not to synchronize
# using as a coma separated list of qualified types
# Ex: synchrodb.excludedTypesMapping=britair:dinamex_VisaEtape,britair:SavedSearch
#synchrodb.excludedTypesMapping=my:test

# in order to avoid to synchronize non useful attributes of the type under the namespace, the following list allows to give the attributes not to synchronize
# using as a coma separated list of qualified attributes
# Ex: synchrodb.excludedTypesMapping=britair:dinamex_DocumentBritair_classer_dinamex_Domainesearch,britair:dinamex_DocumentBritair_organiser_dinamex_Perimetresearch
#synchrodb.excludedAttributesMapping=my:attr1

# in order to get a valid value of target association towards external types (not in the scope of the NamespacePrefix), a column in the table will be created
# externalTypesMapping gives the list of external type using as a coma separated list
# BEWARE: a file synchronization-database-mapping.properties must be created which contains the mapping of the following external types and their associated attributes to map
#synchrodb.externalTypesMapping=cm:person,cm:authorityContainer,cm:authority

# contains the list of attributes which are also authorized but which are outside the namespace prefix given by the first parameter 
# Ex: synchrodb.externalAttributesMapping=cm:title to map the cm:title attribute of the aspect cm:titled
# if, in the synchronisation-database-mapping.properties file, it exists an entry of the form: 
#       class.attribute.name.<class>.title=<value>
#   this entry must be mapped in the database as a column 'title' of the <class> table and the values of the attribute 'cm:title'  of the aspect 'cm:titled' aspect
# BEWARE: that if an attribute of the class has the same name that an attribute of an aspect you mapped, only one column is created and all the values of the class attribute and the aspect attribute are mapped in this column.
#synchrodb.externalAttributesMapping=cm:title


# The path management service allows to store in a table (by default bxcontent as set under webapps\alfresco\WEB-INF\classes\alfresco\module\SIDE_model3411E) the path of the cm:content file
# it is like an index to get fast access to file
# In the current implementation, a bug prevents this to work as the type cm:content which is not a final content type is no more mapped. TO FIX 
synchrodb.usePathManagement=false

