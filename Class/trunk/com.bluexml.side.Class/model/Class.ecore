<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="clazz"
    nsURI="http://www.kerblue.org/class/1.0" nsPrefix="clazz">
  <eClassifiers xsi:type="ecore:EClass" name="ClassModelElement" eSuperTypes="../../com.bluexml.side.Common/model/Common.ecore#//ModelElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasComments" upperBound="-1"
        eType="#//ClassComment" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ClassPackage" eSuperTypes="../../com.bluexml.side.Common/model/Common.ecore#//Package">
    <eOperations name="getAllPackages" upperBound="-1" eType="#//ClassPackage">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="ClassPackage.allInstances()"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllClasses" upperBound="-1" eType="#//Clazz">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="Clazz.allInstances()"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllEnumerations" upperBound="-1" eType="#//Enumeration">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="Enumeration.allInstances()"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllAspects" upperBound="-1" eType="#//Aspect">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="Aspect.allInstances()"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllAssociations" upperBound="-1" eType="#//Association">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="Association.allInstances()"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllAbstractClasses" upperBound="-1" eType="#//AbstractClass">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="AbstractClass.allInstances()"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="classSet" upperBound="-1"
        eType="#//Clazz" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationSet" upperBound="-1"
        eType="#//Association" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aspectSet" upperBound="-1"
        eType="#//Aspect" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="enumerationSet" upperBound="-1"
        eType="#//Enumeration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Clazz" eSuperTypes="#//AbstractClass">
    <eAnnotations source="http://www.bluexml.com/OCL">
      <details key="InheritanceCycle" value="not self.generalizations.generalizations -> includes(self)"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="ClassWithTwoAttributesSameName InheritanceCycle"/>
    </eAnnotations>
    <eOperations name="getAllAttributes" upperBound="-1" eType="#//Attribute">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.getAllInheritedClassAndAspectAttributes() -> union(self.getClassAndAspectAttributes())"/>
        <details key="description" value="search for class attributes, inherited one and finaly added to the class by aspect"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllInheritedAttributes" upperBound="-1" eType="#//Attribute">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="Clazz.allInstances() ->select(e:Clazz|e.getInheritedClasses() ->includes(self) )"/>
        <details key="description" value="get all Clazz that inherite from this Clazz"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getClassAndAspectAttributes" upperBound="-1" eType="#//Attribute">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.attributes -> asSet() -> union(self.getAspectAttributes())"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getInheritedClasses" upperBound="-1" eType="#//Clazz">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.generalizations  ->  asSet()  -> iterate(e:Clazz;result :Set(Clazz)= Set{}| result -> including(e) -> union(e.getInheritedClasses()))"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAspectAttributes" upperBound="-1" eType="#//Attribute">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.aspects ->  asSet()  -> iterate(e:Aspect;result :Set(Attribute)= Set{}| result -> union(e.attributes ->asSet()))"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllSubTypes" upperBound="-1" eType="#//Attribute">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.getAllInheritedAttributes() -> union(self.getClassAndAspectAttributes())"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllInheritedClassAndAspectAttributes" upperBound="-1" eType="#//Attribute">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.getInheritedClasses() ->asSet() ->iterate(cl:Clazz;result:Set(Attribute)=Set{}|result->union(cl.getClassAndAspectAttributes() ->asSet()))"/>
        <details key="description" value="search attributes than is describe in inherited classes (with Aspects)"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getSourceAssociations" upperBound="-1" eType="#//Association">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="Association.allInstances() ->select(c:Association|self.isSource(c))"/>
        <details key="description" value="search association where this clazz is source"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSource" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="(asso.firstEnd.linkedClass = self and asso.secondEnd.isNavigable) or (asso.secondEnd.linkedClass = self and asso.firstEnd.isNavigable)"/>
        <details key="description" value="search for class attributes, inherited one and finaly added to the class by aspect"/>
      </eAnnotations>
      <eParameters name="asso" lowerBound="1" eType="#//Association"/>
    </eOperations>
    <eOperations name="isTarget" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="(asso.firstEnd.linkedClass = self and asso.firstEnd.isNavigable) or (asso.secondEnd.linkedClass = self and asso.secondEnd.isNavigable)"/>
        <details key="description" value="search for class attributes, inherited one and finaly added to the class by aspect"/>
      </eAnnotations>
      <eParameters name="asso" lowerBound="1" eType="#//Association"/>
    </eOperations>
    <eOperations name="getTargetAssociations" upperBound="-1" eType="#//Association">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="Association.allInstances() ->select(c:Association|self.isTarget(c))"/>
        <details key="description" value="search association where this clazz is target"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllSourceAssociations" upperBound="-1" eType="#//Association">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.getInheritedClasses() -> including(self) ->iterate(e:Clazz;result:Set(Association)=Set{}|result->union(e.getSourceAssociations()))"/>
        <details key="description" value="search association where this clazz is source"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllTargetAssociations" upperBound="-1" eType="#//Association">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.getInheritedClasses() -> including(self) ->iterate(e:Clazz;result:Set(Association)=Set{}|result->union(e.getTargetAssociations()))"/>
        <details key="description" value="search associations where this clazz is source or one of inheritedClass"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operations" upperBound="-1"
        eType="ecore:EClass ../../com.bluexml.side.Common/model/Common.ecore#//OperationComponent"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generalizations" upperBound="-1"
        eType="#//Clazz"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aspects" upperBound="-1"
        eType="#//Aspect"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDeprecated" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="#//TitledNamedClassModelElement">
    <eAnnotations source="http://www.bluexml.com/OCL">
      <details key="recursiveAssociationMustHaveRole" value="( self.isRecursive() and self.firstEnd.isNavigable and self.secondEnd.isNavigable ) implies ( ( not self.firstEnd.name.oclIsUndefined() and self.firstEnd.name &lt;> '' ) and ( not self.secondEnd.name.oclIsUndefined() and self.secondEnd.name &lt;> '' ))"/>
      <details key="MinAndMaxTarget" value="( self.secondEnd.cardMax &lt;> '-1' ) implies ( self.secondEnd.cardMin &lt;= self.secondEnd.cardMax )"/>
      <details key="MinAndMaxSource" value="( self.firstEnd.cardMax &lt;> '-1' ) implies ( self.firstEnd.cardMin &lt;= self.firstEnd.cardMax )"/>
      <details key="NameNull" value="not self.name.oclIsUndefined() and self.name &lt;> ''"/>
      <details key="SourceNull" value="self.firstEnd.linkedClass->notEmpty()"/>
      <details key="TargetNull" value="self.secondEnd.linkedClass->notEmpty()"/>
      <details key="AtLeastOneNavigableEdge" value="(firstEnd.isNavigable or secondEnd.isNavigable)"/>
      <details key="ClassCantBeReferencedbyTwoSameNameAssociation" value="self.getSource().getAllSourceAssociations() ->asSet() ->select(a:Association|a.name = self.name)->size() = 1"/>
      <details key="IfAggregationOrCompositionThenUnidirectionalAssociation" value="(self.associationType &lt;> AssociationType::Direct) implies (self.firstEnd.isNavigable xor self.secondEnd.isNavigable )"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="recursiveAssociationMustHaveRole MinAndMaxTarget MinAndMaxSource NameNull SourceNull TargetNull AtLeastOneNavigableEdge ClassCantBeReferencedbyTwoSameNameAssociation IfAggregationOrCompositionThenUnidirectionalAssociation"/>
    </eAnnotations>
    <eOperations name="equalsForMerge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if( self.secondEnd.linkedClass.oclIsKindOf(Classe))&#xD;&#xA;then&#xD;&#xA;self.secondEnd.linkedClass.oclAsType(Classe).equalsForMerge(other.secondEnd.linkedClass.oclAsType(Classe)) and self.firstEnd.linkedClass.oclAsType(Classe).equalsForMerge(other.firstEnd.linkedClass.oclAsType(Classe))&#xD;&#xA;and self.name = other.name&#xD;&#xA;else&#xD;&#xA;true&#xD;&#xA;endif&#xD;&#xA;"/>
      </eAnnotations>
      <eParameters name="other" eType="#//Association"/>
    </eOperations>
    <eOperations name="isRecursive" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="(self.firstEnd.linkedClass.getInheritedClasses() ->including(self.firstEnd.linkedClass) ->includes(self.secondEnd.linkedClass) and self.secondEnd.isNavigable)&#xD;or &#xD;(self.secondEnd.linkedClass.getInheritedClasses() ->including(self.secondEnd.linkedClass) ->includes(self.firstEnd.linkedClass) and self.firstEnd.isNavigable)&#xD;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getSource" lowerBound="1" upperBound="2" eType="#//Clazz">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if (self.firstEnd.isNavigable and self.secondEnd.isNavigable) then &#xD;&#x9;Set{} ->including(self.firstEnd.linkedClass) ->including(self.secondEnd.linkedClass)&#xD;else if (self.firstEnd.isNavigable) then&#xD;&#x9;&#x9;Set{}->including(self.secondEnd.linkedClass)&#xD;&#x9;else if (self.secondEnd.isNavigable) then &#xD;&#x9;&#x9;&#x9;Set{}->including(self.firstEnd.linkedClass)&#xD;&#x9;&#x9;else&#xD;&#x9;&#x9;&#x9;Set{}&#xD;&#x9;&#x9;endif&#xD;&#x9;endif&#xD;endif"/>
        <details key="description" value="get source Clazz"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTarget" lowerBound="1" upperBound="2" eType="#//Clazz">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if (self.firstEnd.isNavigable and self.secondEnd.isNavigable) then &#xD;&#x9;Set{} ->including(self.firstEnd.linkedClass) ->including(self.secondEnd.linkedClass)&#xD;else if (self.secondEnd.isNavigable) then&#xD;&#x9;&#x9;Set{}->including(self.secondEnd.linkedClass)&#xD;&#x9;else if (self.firstEnd.isNavigable) then &#xD;&#x9;&#x9;&#x9;Set{}->including(self.firstEnd.linkedClass)&#xD;&#x9;&#x9;else&#xD;&#x9;&#x9;&#x9;Set{}&#xD;&#x9;&#x9;endif&#xD;&#x9;endif&#xD;endif"/>
        <details key="description" value="get source Clazz"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="associationType" eType="#//AssociationType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="firstEnd" eType="#//FirstEnd"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="secondEnd" eType="#//SecondEnd"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Attribute" eSuperTypes="#//TitledNamedClassModelElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="typ" eType="ecore:EEnum ../../com.bluexml.side.Common/model/Common.ecore#//DataType"
        defaultValueLiteral="void"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="initialValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" eType="ecore:EEnum ../../com.bluexml.side.Common/model/Common.ecore#//Visibility"
        defaultValueLiteral="Private"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valueList" eType="#//Enumeration"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="unique" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Enumeration" eSuperTypes="../../com.bluexml.side.Common/model/Common.ecore#//NamedModelElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="literals" upperBound="-1"
        eType="#//EnumerationLiteral" containment="true" eOpposite="#//EnumerationLiteral/enum"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDynamic" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject"
        defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="depends" eType="#//Enumeration"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="enum" eType="#//Enumeration"
        eOpposite="#//Enumeration/literals"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="AssociationType">
    <eLiterals name="Direct"/>
    <eLiterals name="Aggregation" value="1"/>
    <eLiterals name="Composition" value="2" literal="Composition"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Aspect" eSuperTypes="#//AbstractClass">
    <eOperations name="equalsForMerge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.name = other.name and self.title = other.title"/>
      </eAnnotations>
      <eParameters name="other" eType="#//Aspect"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AbstractClass" abstract="true" eSuperTypes="#//TitledNamedClassModelElement">
    <eAnnotations source="http://www.bluexml.com/OCL">
      <details key="TwoModelElementWithSameName" value="AbstractClass.allInstances()->select(a | a.name = self.name and a.getContainer() = self.getContainer() and a &lt;> self)->size() = 0"/>
      <details key="NameNull" value="not self.name.oclIsUndefined() and self.name &lt;> ''"/>
      <details key="noSpecialCharacters" value="self.name.regexMatch('[\w]*') = true"/>
      <details key="TwoAttributesSameName" value="self.attributes -> forAll( a1, a2 | a1 &lt;> a2 implies a1.name &lt;>a2.name)"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="TwoModelElementWithSameName NameNull noSpecialCharacters TwoAttributesSameName"/>
    </eAnnotations>
    <eOperations name="equalsForMerge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.name = other.name and self.title = other.title"/>
      </eAnnotations>
      <eParameters name="other" eType="#//AbstractClass"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" upperBound="-1"
        eType="#//Attribute" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TitledNamedClassModelElement" abstract="true"
      eSuperTypes="../../com.bluexml.side.Common/model/Common.ecore#//NamedModelElement #//ClassModelElement">
    <eOperations name="getLabel" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if self.title.oclIsUndefined() or self.title.size() &lt;0 then&#xD;&#x9;self.name&#xD;else&#xD;&#x9;self.title&#xD;endif"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="title" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ClassComment" eSuperTypes="../../com.bluexml.side.Common/model/Common.ecore#//Comment"/>
  <eClassifiers xsi:type="ecore:EClass" name="AssociationEnd" abstract="true" eSuperTypes="#//TitledNamedClassModelElement ../../com.bluexml.side.Common/model/Common.ecore#//Comment">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cardMin" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        defaultValueLiteral="0"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cardMax" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        defaultValueLiteral="1"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isNavigable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="linkedClass" eType="#//Clazz"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FirstEnd" eSuperTypes="#//AssociationEnd"/>
  <eClassifiers xsi:type="ecore:EClass" name="SecondEnd" eSuperTypes="#//AssociationEnd"/>
</ecore:EPackage>
